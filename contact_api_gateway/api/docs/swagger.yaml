definitions:
  models.ContactModel:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.ContactUpdate:
    properties:
      status:
        type: string
    type: object
  models.CreateContactModel:
    properties:
      name:
        type: string
      phone:
        type: string
    required:
    - name
    - phone
    type: object
  models.GetAllContactModel:
    properties:
      contacts:
        items:
          $ref: '#/definitions/models.ContactModel'
        type: array
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  models.SigninInput:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  models.UserModel:
    properties:
      lastname:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - lastname
    - name
    - password
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Login User
      operationId: sign-in-user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SigninInput'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Login User
      tags:
      - User
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserModel'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
  /v1/contact:
    get:
      consumes:
      - application/json
      description: Get All Contact
      operationId: get-all-contact
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllContactModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: get all contact
      tags:
      - contact
    post:
      consumes:
      - application/json
      description: Create Contact
      operationId: create-contact
      parameters:
      - description: contact
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/models.CreateContactModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: create contact
      tags:
      - contact
  /v1/contact/{contact_id}:
    delete:
      consumes:
      - application/json
      description: Delete Contact by given ID
      operationId: delete_contact
      parameters:
      - description: contact_id
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.ContactUpdate'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Contact
      tags:
      - contact
    get:
      consumes:
      - application/json
      description: Get Contact
      operationId: get-contact
      parameters:
      - description: contact_id
        in: path
        name: contact_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: get contact
      tags:
      - contact
    put:
      consumes:
      - application/json
      description: Update Contact by ID
      operationId: update_contact
      parameters:
      - description: contact_id
        in: path
        name: contact_id
        required: true
        type: string
      - description: contact
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/models.CreateContactModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.ContactUpdate'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update Contact
      tags:
      - contact
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
